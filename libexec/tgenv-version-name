#!/usr/bin/env bash
# Summary: Show the current Terragrunt version
set -e

[ -n "${TGENV_DEBUG}" ] && set -x
source "${TGENV_ROOT}/libexec/helpers"

[ -d "${TGENV_ROOT}/versions" ] \
  || error_and_die "No versions of terragrunt installed. Please install one with: tgenv install"

if test -z "${TGENV_VERSION:-}"; then
  TGENV_VERSION_FILE="$(tgenv-version-file)"
  TGENV_VERSION="$(cat "${TGENV_VERSION_FILE}" || true)"
fi

if [[ "${TGENV_VERSION}" =~ ^latest.*$ ]]; then
  [[ "${TGENV_VERSION}" =~ ^latest\:.*$ ]] && regex="${TGENV_VERSION##*\:}"
  version="$(\ls "${TGENV_ROOT}/versions" \
    | sort -t'.' -k 1nr,1 -k 2nr,2 -k 3nr,3 \
    | grep -e "${regex}" \
    | head -n 1
  )"
  [ -n "${version}" ] || error_and_die "No installed versions of terragrunt matched '${TGENV_VERSION}'"
  TGENV_VERSION="${version}"
fi

[ -z "${TGENV_VERSION}" ] \
  && error_and_die "Version could not be resolved (set by ${TGENV_VERSION_FILE} or tgenv use <version>)"

version_exists() {
  local version="${1}"
  [ -d "${TGENV_ROOT}/versions/${version}" ]
}

if version_exists "${TGENV_VERSION}"; then
  echo "${TGENV_VERSION}"
else
  error_and_die "version \`${TGENV_VERSION}' is not installed (set by ${TGENV_VERSION_FILE})"
fi
